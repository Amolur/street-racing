// app.js
// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

import { gameState, gameData, updateGameData } from './modules/game-data.js';
import * as navigation from './modules/navigation.js';
import * as auth from './modules/auth.js';
import * as garage from './modules/garage.js';
import * as race from './modules/race.js';
import * as shop from './modules/shop.js';
import * as profile from './modules/profile.js';
import * as upgrades from './modules/upgrades.js';
import { startAutoSave, showLoading } from './modules/utils.js';
import * as dailyTasks from './modules/daily-tasks.js';
import { dom } from './modules/dom-manager.js';
import * as achievements from './modules/achievements.js';
import * as chat from './modules/chat.js';
import * as events from './modules/events.js';
import { notifications } from './modules/notifications.js';

// =====================================
// –ë–ê–ó–û–í–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ –ö–û–ù–°–û–õ–¨–ù–´–• –ß–ò–¢–û–í
// =====================================

// –ó–∞—â–∏—Ç–∞ –æ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ gameData —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å
(function() {
    'use strict';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π gameData
    let realGameData = null;
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ gameData
    function protectGameData(data) {
        realGameData = data;
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π
        return new Proxy(data, {
            set: function(target, property, value) {
                // –†–∞–∑—Ä–µ—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∏–∑–Ω—É—Ç—Ä–∏ –∏–≥—Ä—ã
                const stack = new Error().stack;
                const isFromGame = stack.includes('modules/') || 
                                 stack.includes('updateGameData') ||
                                 stack.includes('fetch');
                
                if (!isFromGame && typeof value === 'number' && 
                    ['money', 'level', 'experience'].includes(property)) {
                    console.warn('üö´ –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!');
                    window.notify('üö´ –ß–∏—Ç–µ—Ä—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!', 'error');
                    return false;
                }
                
                target[property] = value;
                return true;
            },
            
            get: function(target, property) {
                // –ï—Å–ª–∏ –ø—ã—Ç–∞—é—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ - –ª–æ–≥–∏—Ä—É–µ–º
                if (property === 'money' && new Error().stack.includes('eval')) {
                    console.warn('üö´ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –¥–µ–Ω—å–≥–∞–º –∏–≥—Ä–æ–∫–∞');
                }
                return target[property];
            }
        });
    }
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const originalLog = console.log;
    console.log = function(...args) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–æ–ø—ã—Ç–∫–∏ —á–∏—Ç–µ—Ä—Å—Ç–≤–∞
        const message = args.join(' ');
        if (message.includes('gameData') || message.includes('money')) {
            originalLog('üö´ –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ —á–∏—Ç—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —ç—Ç–æ–π –∏–≥—Ä–µ!');
            return;
        }
        originalLog.apply(console, args);
    };
    
    // –î–µ—Ç–µ–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö DevTools (–±–∞–∑–æ–≤—ã–π)
    let devtools = {
        open: false,
        orientation: null
    };
    
    setInterval(() => {
        if (window.outerHeight - window.innerHeight > 200 || 
            window.outerWidth - window.innerWidth > 200) {
            
            if (!devtools.open) {
                devtools.open = true;
                console.clear();
                console.log(`
                
    ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! ‚ö†Ô∏è
    
    –ö–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!
    
    –ß–∏—Ç–µ—Ä—Å—Ç–≤–æ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ:
    ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    ‚ùå –ú–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –±–∞–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞
    ‚ùå –ü–æ—Ä—Ç–∏—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –∏–≥—Ä—ã
    
    –ò–≥—Ä–∞–π—Ç–µ —á–µ—Å—Ç–Ω–æ! üéÆ
    
                `);
            }
        } else {
            devtools.open = false;
        }
    }, 1000);
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ gameData
    Object.defineProperty(window, 'gameData', {
        get: function() {
            return realGameData;
        },
        set: function(value) {
            if (realGameData && typeof value === 'object') {
                realGameData = protectGameData(value);
            } else {
                realGameData = value;
            }
        },
        configurable: false
    });
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞—â–∏—Ç—ã
    window.protectGameData = protectGameData;
    
})();

// =====================================
// –ó–ê–©–ò–¢–ê –û–¢ –ò–ó–ú–ï–ù–ï–ù–ò–Ø WINDOW –û–ë–™–ï–ö–¢–û–í
// =====================================

// –ó–∞—â–∏—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const protectedFunctions = [
    'updatePlayerInfo',
    'buyCar',
    'upgradeComponent',
    'claimTaskReward',
    'startRace'
];

protectedFunctions.forEach(funcName => {
    const originalFunc = window[funcName];
    if (originalFunc) {
        Object.defineProperty(window, funcName, {
            value: originalFunc,
            writable: false,
            configurable: false
        });
    }
});

// =====================================
// –ú–û–ù–ò–¢–û–†–ò–ù–ì –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò
// =====================================

// –°—á–µ—Ç—á–∏–∫ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
let suspiciousActivity = 0;
const MAX_SUSPICIOUS = 3;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ —á–∏—Ç–µ—Ä—Å—Ç–≤–µ
function reportCheating(type, details) {
    suspiciousActivity++;
    
    console.warn(`üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${type}`);
    
    if (suspiciousActivity >= MAX_SUSPICIOUS) {
        window.notify('üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —á–∏—Ç–µ—Ä—Å—Ç–≤–æ! –ê–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.', 'error');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if (window.API_URL && localStorage.getItem('authToken')) {
            fetch(`${window.API_URL}/game/report-cheating`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`
                },
                body: JSON.stringify({
                    type: type,
                    details: details,
                    timestamp: Date.now(),
                    userAgent: navigator.userAgent
                })
            }).catch(() => {}); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
        }
    }
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Å–æ–ª–∏
const originalEval = window.eval;
window.eval = function(code) {
    if (typeof code === 'string' && 
        (code.includes('gameData') || code.includes('money') || code.includes('level'))) {
        reportCheating('console_eval', code.substring(0, 100));
        throw new Error('üö´ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ');
    }
    return originalEval(code);
};

console.log('üõ°Ô∏è –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —á–∏—Ç–µ—Ä—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è onclick –≤ HTML

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
window.showMainMenu = navigation.showMainMenu;
window.showGarageScreen = navigation.showGarageScreen;
window.showRaceMenu = navigation.showRaceMenu;
window.showShopScreen = navigation.showShopScreen;
window.showProfileScreen = navigation.showProfileScreen;
window.showLeaderboardScreen = navigation.showLeaderboardScreen;
window.showDailyTasksScreen = navigation.showDailyTasksScreen; 
window.goBack = navigation.goBack;

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
window.handleLogin = auth.handleLogin;
window.handleRegister = auth.handleRegister;
window.showLoginForm = auth.showLoginForm;
window.showRegisterForm = auth.showRegisterForm;
window.logout = auth.logout;

// –ì–∞—Ä–∞–∂
window.previousCar = garage.previousCar;
window.nextCar = garage.nextCar;
window.showGarageTab = garage.showGarageTab;
window.updateGarageDisplay = garage.updateGarageDisplay;

// –£–ª—É—á—à–µ–Ω–∏—è
window.upgradeComponent = upgrades.upgradeComponent;
window.buySpecialPart = upgrades.buySpecialPart;

// –ì–æ–Ω–∫–∏
window.showRacePreview = race.showRacePreview;
window.confirmRace = race.confirmRace;
window.closeRacePreview = race.closeRacePreview;
window.startRace = race.startRace;
window.displayOpponents = race.displayOpponents;

// –ú–∞–≥–∞–∑–∏–Ω
window.buyCar = shop.buyCar;
window.sellCar = shop.sellCar;
window.showShopTab = shop.showShopTab;
window.updateShopDisplay = shop.updateShopDisplay;

// –ü—Ä–æ—Ñ–∏–ª—å
window.updateProfileDisplay = profile.updateProfileDisplay;
window.updateLeaderboard = profile.updateLeaderboard;

// –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
window.showAchievementsScreen = navigation.showAchievementsScreen;
window.updateAchievementsDisplay = achievements.updateAchievementsDisplay;
window.checkAllAchievements = achievements.checkAllAchievements;

// –ß–∞—Ç –∏ –Ω–æ–≤–æ—Å—Ç–∏
window.showCommunityScreen = navigation.showCommunityScreen;
window.showCommunityTab = navigation.showCommunityTab;
// –ß–∞—Ç –∏ –Ω–æ–≤–æ—Å—Ç–∏ - —Ñ—É–Ω–∫—Ü–∏–∏
window.loadChatMessages = chat.loadChatMessages;
window.sendChatMessage = chat.sendChatMessage;
window.handleChatSubmit = chat.handleChatSubmit;
window.startChatUpdates = chat.startChatUpdates;
window.stopChatUpdates = chat.stopChatUpdates;
window.checkChatScroll = chat.checkChatScroll;
window.loadNews = chat.loadNews;
window.switchNewsCategory = chat.switchNewsCategory;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('DOMContentLoaded', async function() {
    // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
    setTimeout(() => {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.style.display = 'none';
        }
    }, 1000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const isAuthorized = await auth.checkAuth();
    
    if (isAuthorized) {
        auth.showGameFunc();
        startDailyTasksTimer();
    } else {
        navigation.showAuthScreen();
    }
});

// –¢–∞–π–º–µ—Ä –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
function startDailyTasksTimer() {
    dailyTasks.updateDailyTasksTimer();
    setInterval(dailyTasks.updateDailyTasksTimer, 1000);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', async (e) => {
    if (gameState.currentUser && gameData) {
        try {
            if (typeof window.saveGameData === 'function') {
                await window.saveGameData(gameData);
            }
        } catch (error) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏:', error);
        }
    }
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
setInterval(async () => {
    if (gameState.currentUser && navigator.onLine) {
        try {
            if (typeof window.saveGameData === 'function') {
                await window.saveGameData(gameData);
            }
        } catch (error) {
            // –¢–∏—Ö–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        }
    }
}, 60000); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
// –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
let lastActivity = Date.now();

document.addEventListener('click', () => {
    lastActivity = Date.now();
});

document.addEventListener('keypress', () => {
    lastActivity = Date.now();
});
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Å–µ–∫—Ü–∏—é —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º
    const logoSection = document.querySelector('.header-logo-section');
    if (logoSection) {
        logoSection.addEventListener('click', function() {
            if (window.showMainMenu) {
                window.showMainMenu();
            }
        });
    }
});
// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
setInterval(async () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥
    if (gameState.currentUser && navigator.onLine && (Date.now() - lastActivity < 30000)) {
        try {
            if (typeof window.saveGameData === 'function') {
                await window.saveGameData(gameData);
            }
        } catch (error) {
            // –¢–∏—Ö–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            console.log('–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ');
        }
    }
}, 60000);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
export { gameState, gameData };
window.showEventScreen = events.showEventScreen;
window.checkCurrentEvent = events.checkCurrentEvent;
window.startEventChecking = events.startEventChecking;