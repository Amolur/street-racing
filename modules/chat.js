// modules/chat.js
// –ß–∞—Ç –∏ –Ω–æ–≤–æ—Å—Ç–∏

let chatMessages = [];
let newsItems = [];

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —á–∞—Ç–∞
const mockChatMessages = [
    {
        id: 1,
        username: "–ì–æ–Ω—â–∏–∫123",
        message: "–ö—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—á–µ—Ç –ø–æ–≥–æ–Ω—è—Ç—å?",
        timestamp: new Date(Date.now() - 300000).toISOString(),
        level: 15
    },
    {
        id: 2,
        username: "–°–∫–æ—Ä–æ—Å—Ç—å",
        message: "–¢–æ–ª—å–∫–æ —á—Ç–æ –∫—É–ø–∏–ª –Ω–æ–≤—É—é –¢–æ–π–æ—Ç—É!",
        timestamp: new Date(Date.now() - 180000).toISOString(),
        level: 8
    },
    {
        id: 3,
        username: "–ú–∞—Å—Ç–µ—Ä–î—Ä–∏—Ñ—Ç",
        message: "–ì–¥–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏?",
        timestamp: new Date(Date.now() - 120000).toISOString(),
        level: 22
    }
];

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π
const mockNews = [
    {
        id: 1,
        title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã v2.1",
        content: "–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –º–∞—à–∏–Ω—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º—É –≥–æ–Ω–æ–∫",
        timestamp: new Date(Date.now() - 86400000).toISOString(),
        author: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏"
    },
    {
        id: 2,
        title: "–¢—É—Ä–Ω–∏—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è",
        content: "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–∏–∑—ã!",
        timestamp: new Date(Date.now() - 172800000).toISOString(),
        author: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"
    },
    {
        id: 3,
        title: "–ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
        content: "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –≥–æ–Ω—â–∏–∫–æ–≤",
        timestamp: new Date(Date.now() - 259200000).toISOString(),
        author: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏"
    }
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
export function initChat() {
    loadChatMessages();
    loadNews();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —á–∞—Ç –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ (–≤ —Ä–µ–∞–ª—å–Ω–æ–π –∏–≥—Ä–µ)
    setInterval(loadChatMessages, 30000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    setInterval(loadNews, 300000);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞
async function loadChatMessages() {
    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        // const response = await fetch('/api/chat/messages');
        // chatMessages = await response.json();
        
        // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏
        chatMessages = [...mockChatMessages];
        updateChatDisplay();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞:', error);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        chatMessages = [...mockChatMessages];
        updateChatDisplay();
        
        window.notifyError('üí¨ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–∞—Ç–∞
function updateChatDisplay() {
    const chatContainer = document.getElementById('chat-messages');
    if (!chatContainer) return;
    
    const messagesHTML = chatMessages
        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))
        .slice(0, 50) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å–æ–æ–±—â–µ–Ω–∏–π
        .map(message => createChatMessageElement(message))
        .join('');
    
    chatContainer.innerHTML = messagesHTML || '<p class="no-data">–°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>';
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    chatContainer.scrollTop = chatContainer.scrollHeight;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function createChatMessageElement(message) {
    const timeAgo = formatTimeAgo(new Date(message.timestamp));
    const levelColor = getLevelColor(message.level);
    
    return `
        <div class="chat-message">
            <div class="message-header">
                <span class="username" style="color: ${levelColor}">
                    ${message.username}
                    <span class="user-level">Lv.${message.level}</span>
                </span>
                <span class="timestamp">${timeAgo}</span>
            </div>
            <div class="message-content">${escapeHtml(message.message)}</div>
        </div>
    `;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
export async function sendChatMessage() {
    const input = document.getElementById('chat-input');
    if (!input || !input.value.trim()) return;
    
    const message = input.value.trim();
    
    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        // await fetch('/api/chat/send', {
        //     method: 'POST',
        //     body: JSON.stringify({ message })
        // });
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ (–∑–∞–≥–ª—É—à–∫–∞)
        const newMessage = {
            id: Date.now(),
            username: "–í—ã", // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            message: message,
            timestamp: new Date().toISOString(),
            level: 1 // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        };
        
        chatMessages.unshift(newMessage);
        updateChatDisplay();
        
        input.value = '';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        window.notifyError(`üí¨ ${error.message}`);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async function loadNews() {
    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        // const response = await fetch('/api/news');
        // newsItems = await response.json();
        
        // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏
        newsItems = [...mockNews];
        updateNewsDisplay();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        newsItems = [...mockNews];
        updateNewsDisplay();
        
        window.notifyError('üì∞ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
function updateNewsDisplay() {
    const newsContainer = document.getElementById('news-list');
    if (!newsContainer) return;
    
    const newsHTML = newsItems
        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))
        .map(item => createNewsItemElement(item))
        .join('');
    
    newsContainer.innerHTML = newsHTML || '<p class="no-data">–ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>';
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏
function createNewsItemElement(item) {
    const timeAgo = formatTimeAgo(new Date(item.timestamp));
    
    return `
        <div class="news-item card">
            <div class="card-header">
                <h3 class="card-title">${escapeHtml(item.title)}</h3>
                <span class="news-time">${timeAgo}</span>
            </div>
            <div class="card-body">
                <p class="news-content">${escapeHtml(item.content)}</p>
                <p class="news-author">‚Äî ${escapeHtml(item.author)}</p>
            </div>
        </div>
    `;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —á–∞—Ç–∞
export function showChatTab(tab) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelectorAll('#community-screen .tab-button').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelectorAll('#community-screen .tab-content').forEach(content => {
        content.classList.remove('active');
    });
    
    if (tab === 'chat') {
        const chatButton = document.querySelector('#community-screen .tab-button:first-child');
        const chatContent = document.getElementById('community-chat');
        
        if (chatButton) chatButton.classList.add('active');
        if (chatContent) chatContent.classList.add('active');
        
        loadChatMessages();
    } else if (tab === 'news') {
        const newsButton = document.querySelector('#community-screen .tab-button:last-child');
        const newsContent = document.getElementById('community-news');
        
        if (newsButton) newsButton.classList.add('active');
        if (newsContent) newsContent.classList.add('active');
        
        loadNews();
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function formatTimeAgo(date) {
    const now = new Date();
    const diffMs = now - date;
    const diffMinutes = Math.floor(diffMs / 60000);
    
    if (diffMinutes < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffMinutes < 60) return `${diffMinutes}–º –Ω–∞–∑–∞–¥`;
    
    const diffHours = Math.floor(diffMinutes / 60);
    if (diffHours < 24) return `${diffHours}—á –Ω–∞–∑–∞–¥`;
    
    const diffDays = Math.floor(diffHours / 24);
    if (diffDays < 7) return `${diffDays}–¥ –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString();
}

function getLevelColor(level) {
    if (level < 5) return '#cccccc';
    if (level < 10) return '#33aa33';
    if (level < 20) return '#4488ff';
    if (level < 30) return '#ffa500';
    return '#ff4444';
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
document.addEventListener('DOMContentLoaded', () => {
    const chatInput = document.getElementById('chat-input');
    if (chatInput) {
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendChatMessage();
            }
        });
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.sendChatMessage = sendChatMessage;
window.showChatTab = showChatTab;
window.initChat = initChat;