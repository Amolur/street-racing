// modules/notifications.js
// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
class NotificationSystem {
    constructor() {
        this.queue = [];
        this.isShowing = false;
    }
    
    show(message, type = 'info', duration = 3000) {
        this.queue.push({ message, type, duration });
        this.processQueue();
    }
    
    async processQueue() {
        if (this.isShowing || this.queue.length === 0) return;
        
        this.isShowing = true;
        const notification = this.queue.shift();
        
        const element = this.createElement(notification);
        document.body.appendChild(element);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        await this.animate(element, 'in');
        
        // –ñ–¥–µ–º
        await new Promise(resolve => setTimeout(resolve, notification.duration));
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        await this.animate(element, 'out');
        
        element.remove();
        this.isShowing = false;
        
        // –°–ª–µ–¥—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.processQueue();
    }
    
    createElement(notification) {
        const div = document.createElement('div');
        div.className = `game-notification ${notification.type}`;
        div.innerHTML = `
            <div class="notification-icon">${this.getIcon(notification.type)}</div>
            <div class="notification-message">${notification.message}</div>
        `;
        return div;
    }
    
    getIcon(type) {
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è',
            reward: 'üéÅ',
            level: '‚≠ê',
            skill: '‚ö°'
        };
        return icons[type] || icons.info;
    }
    
    async animate(element, direction) {
        if (direction === 'in') {
            element.style.transform = 'translateX(100%)';
            element.style.opacity = '0';
            
            // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É
            element.offsetHeight;
            
            element.style.transition = 'all 0.3s ease-out';
            element.style.transform = 'translateX(0)';
            element.style.opacity = '1';
        } else {
            element.style.transition = 'all 0.3s ease-in';
            element.style.transform = 'translateX(100%)';
            element.style.opacity = '0';
        }
        
        await new Promise(resolve => setTimeout(resolve, 300));
    }
}

export const notifications = new NotificationSystem();

// –ì–ª–æ–±–∞–ª—å–Ω–æ
window.notify = (message, type = 'info') => notifications.show(message, type);