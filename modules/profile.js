// modules/profile.js
// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞

import { gameData } from './game-data.js';
import { updatePlayerInfo } from './utils.js';

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
async function getExtendedStats() {
    try {
        if (typeof window.getProfileStats === 'function') {
            return await window.getProfileStats();
        }
        
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        return {
            totalPlayTime: 0,
            averageRaceTime: 0,
            winRate: gameData.stats.totalRaces > 0 ? 
                Math.round((gameData.stats.wins / gameData.stats.totalRaces) * 100) : 0,
            longestWinStreak: 0,
            favoriteOpponent: '–ù–æ–≤–∏—á–æ–∫',
            totalDistance: 0,
            perfectRaces: 0
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        return {
            totalPlayTime: 0,
            averageRaceTime: 0,
            winRate: 0,
            longestWinStreak: 0,
            favoriteOpponent: '–ù–æ–≤–∏—á–æ–∫',
            totalDistance: 0,
            perfectRaces: 0
        };
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
export async function updateProfileDisplay() {
    // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const usernameEl = document.getElementById('profile-username');
    const levelEl = document.getElementById('profile-level');
    const experienceEl = document.getElementById('profile-experience');
    const moneyEl = document.getElementById('profile-money');
    
    if (usernameEl && gameData) {
        usernameEl.textContent = gameData.username || '–ò–≥—Ä–æ–∫';
    }
    
    if (levelEl && gameData) {
        levelEl.textContent = gameData.level || 1;
    }
    
    if (experienceEl && gameData) {
        experienceEl.textContent = gameData.experience || 0;
    }
    
    if (moneyEl && gameData) {
        moneyEl.textContent = `$${gameData.money?.toLocaleString() || '0'}`;
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const winsEl = document.getElementById('profile-wins');
    const totalRacesEl = document.getElementById('profile-total-races');
    const moneyEarnedEl = document.getElementById('profile-money-earned');
    const moneySpentEl = document.getElementById('profile-money-spent');
    
    if (winsEl && gameData.stats) {
        winsEl.textContent = gameData.stats.wins || 0;
    }
    
    if (totalRacesEl && gameData.stats) {
        totalRacesEl.textContent = gameData.stats.totalRaces || 0;
    }
    
    if (moneyEarnedEl && gameData.stats) {
        moneyEarnedEl.textContent = `$${gameData.stats.moneyEarned?.toLocaleString() || '0'}`;
    }
    
    if (moneySpentEl && gameData.stats) {
        moneySpentEl.textContent = `$${gameData.stats.moneySpent?.toLocaleString() || '0'}`;
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try {
        const extendedStats = await getExtendedStats();
        updateExtendedStats(extendedStats);
    } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:', error);
        window.notifyError('üìä –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateExtendedStats(stats) {
    const elements = {
        'profile-playtime': formatPlayTime(stats.totalPlayTime),
        'profile-avg-race-time': `${stats.averageRaceTime}—Å`,
        'profile-win-rate': `${stats.winRate}%`,
        'profile-win-streak': stats.longestWinStreak,
        'profile-favorite-opponent': stats.favoriteOpponent,
        'profile-total-distance': `${stats.totalDistance}–∫–º`,
        'profile-perfect-races': stats.perfectRaces
    };
    
    Object.entries(elements).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = value;
        }
    });
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
function formatPlayTime(minutes) {
    if (minutes < 60) {
        return `${minutes}–º`;
    }
    
    const hours = Math.floor(minutes / 60);
    const remainingMinutes = minutes % 60;
    
    if (hours < 24) {
        return `${hours}—á ${remainingMinutes}–º`;
    }
    
    const days = Math.floor(hours / 24);
    const remainingHours = hours % 24;
    return `${days}–¥ ${remainingHours}—á`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—à–∏–Ω–∞—Ö –≤ –ø—Ä–æ—Ñ–∏–ª–µ
export function updateProfileCars() {
    const carsCountEl = document.getElementById('profile-cars-count');
    const currentCarEl = document.getElementById('profile-current-car');
    
    if (carsCountEl && gameData.cars) {
        carsCountEl.textContent = gameData.cars.length;
    }
    
    if (currentCarEl && gameData.cars && gameData.currentCar !== undefined) {
        const currentCar = gameData.cars[gameData.currentCar];
        currentCarEl.textContent = currentCar ? currentCar.name : '–ù–µ—Ç –º–∞—à–∏–Ω—ã';
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –∏–≥—Ä–æ–∫–∞
export function updatePlayerAvatar() {
    const avatars = document.querySelectorAll('.profile-avatar, .player-avatar');
    
    avatars.forEach(avatar => {
        if (gameData.username) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
            avatar.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(gameData.username)}&background=ff4444&color=ffffff&size=100&bold=true`;
            avatar.alt = gameData.username;
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è
export function initProfileScreen() {
    updateProfileDisplay();
    updateProfileCars();
    updatePlayerAvatar();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
    if (typeof window.updateAchievementsDisplay === 'function') {
        window.updateAchievementsDisplay();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.updateProfileDisplay = updateProfileDisplay;
window.updateProfileCars = updateProfileCars;
window.updatePlayerAvatar = updatePlayerAvatar;
window.initProfileScreen = initProfileScreen;