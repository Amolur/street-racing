// modules/shop.js
// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞ —Å –ó–ê–©–ò–©–ï–ù–ù–´–ú–ò –ø–æ–∫—É–ø–∫–∞–º–∏

import { gameData, allCars, levelSystem } from './game-data.js';
import { showError, showLoading, updatePlayerInfo } from './utils.js';
import { initializeCarUpgrades } from './upgrades.js';
import { createShopCarCard } from './ui-components.js';

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
export function updateShopDisplay() {
    const buyTab = document.getElementById('shop-buy');
    const sellTab = document.getElementById('shop-sell');
    
    if (buyTab && buyTab.classList.contains('active')) {
        updateBuyTab();
    }
    
    if (sellTab && sellTab.classList.contains('active')) {
        updateSellTab();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ø–æ–∫—É–ø–∫–∏
function updateBuyTab() {
    const container = document.getElementById('cars-for-sale');
    if (!container) return;
    
    const carsHTML = allCars
        .filter(car => car.price > 0)
        .map(car => {
            const owned = gameData.cars.some(c => c.id === car.id);
            const requiredLevel = levelSystem.getCarRequiredLevel(car.price);
            const canBuy = gameData.level >= requiredLevel && gameData.money >= car.price;
            
            if (owned) return '';
            
            return createShopCarCard(car, owned, canBuy, requiredLevel, gameData.level);
        })
        .filter(html => html !== '')
        .join('');
    
    container.innerHTML = carsHTML || '<p class="no-data">–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—à–∏–Ω—ã —É–∂–µ –∫—É–ø–ª–µ–Ω—ã!</p>';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–æ–¥–∞–∂–∏
function updateSellTab() {
    const container = document.getElementById('cars-to-sell');
    if (!container) return;
    
    const carsHTML = gameData.cars
        .filter(car => car.price > 0)
        .map((car, index) => {
            const sellPrice = Math.floor(car.price * 0.7);
            
            return `
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">${car.name}</h3>
                    </div>
                    <div class="card-body">
                        <div class="car-image-placeholder">üöó</div>
                        <p class="car-price">–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: $${sellPrice.toLocaleString()}</p>
                        <button class="action-button warning" onclick="sellCar(${index})">
                            –ü—Ä–æ–¥–∞—Ç—å
                        </button>
                    </div>
                </div>
            `;
        })
        .join('');
    
    container.innerHTML = carsHTML || '<p class="no-data">–£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏</p>';
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –º–∞—à–∏–Ω—ã - –í–°–Å –ß–ï–†–ï–ó –°–ï–†–í–ï–†
export async function buyCar(carId) {
    const car = allCars.find(c => c.id === carId);
    const requiredLevel = levelSystem.getCarRequiredLevel(car.price);
    
    // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (–¥—É–±–ª–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
    if (!car || gameData.money < car.price || gameData.level < requiredLevel) {
        window.notify('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç—Ç—É –º–∞—à–∏–Ω—É!', 'error');
        return;
    }
    
    if (!confirm(`–ö—É–ø–∏—Ç—å ${car.name} –∑–∞ $${car.price.toLocaleString()}?`)) {
        return;
    }
    
    try {
        // –ó–ê–©–ò–¢–ê: –í–°–Ø –õ–û–ì–ò–ö–ê –ü–û–ö–£–ü–ö–ò –ù–ê –°–ï–†–í–ï–†–ï
        const response = await fetch(`${window.API_URL}/game/buy-car`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('authToken')}`
            },
            body: JSON.stringify({ carId })
        });
        
        if (!response.ok) {
            const error = await response.json();
            window.notify(error.error || '–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏', 'error');
            return;
        }
        
        const result = await response.json();
        
        // –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¢–û–õ–¨–ö–û –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
        gameData.money = result.remainingMoney;
        gameData.cars = [...gameData.cars, result.car];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–∂–µ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if (result.gameData && result.gameData.stats) {
            gameData.stats = result.gameData.stats;
        }
        
        updatePlayerInfo();
        updateShopDisplay();
        
        window.notify(`‚úÖ –í—ã –∫—É–ø–∏–ª–∏ ${car.name}!`, 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏–π
        if (window.updateTaskProgress) {
            window.updateTaskProgress('moneySpent', car.price);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if (window.checkAllAchievements) {
            window.checkAllAchievements();
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–∞—à–∏–Ω—ã:', error);
        window.notify('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
    }
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ –º–∞—à–∏–Ω—ã - –í–°–Å –ß–ï–†–ï–ó –°–ï–†–í–ï–†
export async function sellCar(index) {
    if (gameData.cars.length <= 1) {
        window.notify('–ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∞—à–∏–Ω—É!', 'error');
        return;
    }
    
    const car = gameData.cars[index];
    const sellPrice = Math.floor(car.price * 0.7);
    
    if (!confirm(`–ü—Ä–æ–¥–∞—Ç—å ${car.name} –∑–∞ $${sellPrice.toLocaleString()}?`)) {
        return;
    }
    
    try {
        // –ó–ê–©–ò–¢–ê: –í–°–Ø –õ–û–ì–ò–ö–ê –ü–†–û–î–ê–ñ–ò –ù–ê –°–ï–†–í–ï–†–ï
        const response = await fetch(`${window.API_URL}/game/sell-car`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('authToken')}`
            },
            body: JSON.stringify({ carIndex: index })
        });
        
        if (!response.ok) {
            const error = await response.json();
            window.notify(error.error || '–û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏', 'error');
            return;
        }
        
        const result = await response.json();
        
        // –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¢–û–õ–¨–ö–û –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
        gameData.money = result.newMoney;
        gameData.cars = result.remainingCars;
        gameData.currentCar = result.newCurrentCar;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
        if (result.gameData && result.gameData.stats) {
            gameData.stats = result.gameData.stats;
        }
        
        updatePlayerInfo();
        updateShopDisplay();
        
        window.notify(`${car.name} –ø—Ä–æ–¥–∞–Ω–∞ –∑–∞ $${sellPrice.toLocaleString()}`, 'success');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –º–∞—à–∏–Ω—ã:', error);
        window.notify('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
export function showShopTab(tab) {
    // –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    document.querySelectorAll('.tabs-header .tab-button').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('#shop-screen .tab-content').forEach(content => content.classList.remove('active'));
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    if (tab === 'buy') {
        document.querySelector('.tabs-header .tab-button:first-child').classList.add('active');
        document.getElementById('shop-buy').classList.add('active');
        updateBuyTab();
    } else {
        document.querySelector('.tabs-header .tab-button:last-child').classList.add('active');
        document.getElementById('shop-sell').classList.add('active');
        updateSellTab();
    }
}

window.updateShopDisplay = updateShopDisplay;
window.buyCar = buyCar;
window.sellCar = sellCar;
window.showShopTab = showShopTab;