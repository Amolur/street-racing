// modules/shop.js
// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞

import { gameData, allCars, levelSystem } from './game-data.js';
import { showError, showLoading, updatePlayerInfo } from './utils.js';
import { initializeCarUpgrades } from './upgrades.js';

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
export function updateShopDisplay() {
    // –ú–∞—à–∏–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏
    const carsForSale = document.getElementById('cars-for-sale');
    if (carsForSale) {
        carsForSale.innerHTML = '';
        
        allCars.forEach(car => {
            const owned = gameData.cars.some(c => c.id === car.id);
            const requiredLevel = levelSystem.getCarRequiredLevel(car.price);
            const canBuy = gameData.level >= requiredLevel && gameData.money >= car.price;
            
            if (!owned && car.price > 0) {
                const carDiv = document.createElement('div');
                carDiv.className = 'car-shop-item';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—à–∏–Ω
                if (gameData.level < requiredLevel) {
                    carDiv.classList.add('locked');
                }
                
                carDiv.innerHTML = `
                    ${car.image ? 
                        `<img src="${car.image}" alt="${car.name}" class="car-shop-image">` :
                        `<div class="car-shop-emoji">üöó</div>`
                    }
                    <div class="car-shop-info">
                        <h4>${car.name}</h4>
                        ${gameData.level < requiredLevel ? 
                            `<p class="level-requirement">üîí –¢—Ä–µ–±—É–µ—Ç—Å—è ${requiredLevel} —É—Ä–æ–≤–µ–Ω—å</p>` : ''}
                        <div class="car-shop-stats">
                            <div class="shop-stat">
                                <span class="shop-stat-label">–ú–æ—â–Ω–æ—Å—Ç—å:</span>
                                <span class="shop-stat-value">${car.power}</span>
                            </div>
                            <div class="shop-stat">
                                <span class="shop-stat-label">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                                <span class="shop-stat-value">${car.speed}</span>
                            </div>
                            <div class="shop-stat">
                                <span class="shop-stat-label">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</span>
                                <span class="shop-stat-value">${car.handling}</span>
                            </div>
                            <div class="shop-stat">
                                <span class="shop-stat-label">–†–∞–∑–≥–æ–Ω:</span>
                                <span class="shop-stat-value">${car.acceleration}</span>
                            </div>
                        </div>
                        <p class="price">$${car.price.toLocaleString()}</p>
                    </div>
                    <button class="btn-primary" onclick="buyCar(${car.id})" ${!canBuy ? 'disabled' : ''}>
                        ${gameData.level < requiredLevel ? `–ù—É–∂–µ–Ω ${requiredLevel} —É—Ä–æ–≤–µ–Ω—å` : 
                          gameData.money < car.price ? '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥' : '–ö—É–ø–∏—Ç—å'}
                    </button>
                `;
                carsForSale.appendChild(carDiv);
            }
        });
        
        if (carsForSale.children.length === 0) {
            carsForSale.innerHTML = '<p class="no-data">–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—à–∏–Ω—ã —É–∂–µ –∫—É–ø–ª–µ–Ω—ã!</p>';
        }
    }
    
    // –ú–∞—à–∏–Ω—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
    const carsToSell = document.getElementById('cars-to-sell');
    if (carsToSell) {
        carsToSell.innerHTML = '';
        
        gameData.cars.forEach((car, index) => {
            if (car.price > 0) {
                const sellPrice = Math.floor(car.price * 0.7);
                const carDiv = document.createElement('div');
                carDiv.className = 'car-shop-item';
                
                // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ
                const carInfo = allCars.find(c => c.id === car.id);
                
                carDiv.innerHTML = `
                    ${carInfo && carInfo.image ? 
                        `<img src="${carInfo.image}" alt="${car.name}" class="car-shop-image">` :
                        `<div class="car-shop-emoji">üöó</div>`
                    }
                    <div class="car-shop-info">
                        <h4>${car.name}</h4>
                        <div class="car-shop-stats">
                            <div class="shop-stat">
                                <span class="shop-stat-label">–ú–æ—â–Ω–æ—Å—Ç—å:</span>
                                <span class="shop-stat-value">${car.power}</span>
                            </div>
                            <div class="shop-stat">
                                <span class="shop-stat-label">–°–∫–æ—Ä–æ—Å—Ç—å:</span>
                                <span class="shop-stat-value">${car.speed}</span>
                            </div>
                        </div>
                        <p class="price">–ü—Ä–æ–¥–∞—Ç—å –∑–∞: $${sellPrice.toLocaleString()}</p>
                    </div>
                    <button class="btn-primary" onclick="sellCar(${index})">–ü—Ä–æ–¥–∞—Ç—å</button>
                `;
                carsToSell.appendChild(carDiv);
            }
        });
        
        if (carsToSell.children.length === 0) {
            carsToSell.innerHTML = '<p class="no-data">–£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏</p>';
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –º–∞—à–∏–Ω—ã
export async function buyCar(carId) {
    const car = allCars.find(c => c.id === carId);
    const requiredLevel = levelSystem.getCarRequiredLevel(car.price);
    
    if (!car || gameData.money < car.price || gameData.level < requiredLevel) {
        showError('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç—Ç—É –º–∞—à–∏–Ω—É!');
        return;
    }
    
    if (!confirm(`–ö—É–ø–∏—Ç—å ${car.name} –∑–∞ $${car.price.toLocaleString()}?`)) {
        return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞
    const oldMoney = gameData.money;
    const oldSpent = gameData.stats.moneySpent;
    const oldCars = [...gameData.cars];
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ
    gameData.money -= car.price;
    gameData.stats.moneySpent += car.price;
    
    const newCar = {...car, owned: true};
    initializeCarUpgrades(newCar);
    gameData.cars.push(newCar);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    updatePlayerInfo();
    updateShopDisplay();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    showLoading(true);
    
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        await saveGameData(gameData);
        showLoading(false);
        
        console.log('–ü–æ–∫—É–ø–∫–∞ –º–∞—à–∏–Ω—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
        showError(`‚úÖ –í—ã –∫—É–ø–∏–ª–∏ ${car.name}!`);
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏–π
        if (window.updateTaskProgress) {
            window.updateTaskProgress('moneySpent', car.price);
        }
    } catch (error) {
        showLoading(false);
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –º–∞—à–∏–Ω—ã:', error);
        
        // –û–¢–ö–ê–¢–´–í–ê–ï–ú –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
        gameData.money = oldMoney;
        gameData.stats.moneySpent = oldSpent;
        gameData.cars = oldCars;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updatePlayerInfo();
        updateShopDisplay();
        
        showError('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è! –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ –º–∞—à–∏–Ω—ã
export async function sellCar(index) {
    if (gameData.cars.length <= 1) {
        alert('–ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∞—à–∏–Ω—É!');
        return;
    }
    
    const car = gameData.cars[index];
    const sellPrice = Math.floor(car.price * 0.7);
    
    if (confirm(`–ü—Ä–æ–¥–∞—Ç—å ${car.name} –∑–∞ $${sellPrice.toLocaleString()}?`)) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞
        const oldMoney = gameData.money;
        const oldEarned = gameData.stats.moneyEarned;
        const oldCars = [...gameData.cars];
        const oldCurrentCar = gameData.currentCar;
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        gameData.money += sellPrice;
        gameData.stats.moneyEarned += sellPrice;
        gameData.cars.splice(index, 1);
        
        if (gameData.currentCar >= gameData.cars.length) {
            gameData.currentCar = 0;
        }
        
        updatePlayerInfo();
        updateShopDisplay();
        
        showLoading(true);
        
        try {
            await saveGameData(gameData);
            showLoading(false);
            showError(`${car.name} –ø—Ä–æ–¥–∞–Ω–∞ –∑–∞ $${sellPrice.toLocaleString()}`);
        } catch (error) {
            showLoading(false);
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏:', error);
            
            // –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
            gameData.money = oldMoney;
            gameData.stats.moneyEarned = oldEarned;
            gameData.cars = oldCars;
            gameData.currentCar = oldCurrentCar;
            
            updatePlayerInfo();
            updateShopDisplay();
            
            showError('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è! –ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
export function showShopTab(tab) {
    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.shop-content').forEach(content => content.classList.remove('active'));
    
    if (tab === 'buy') {
        document.querySelector('.tab-btn:first-child').classList.add('active');
        document.getElementById('shop-buy').classList.add('active');
    } else {
        document.querySelector('.tab-btn:last-child').classList.add('active');
        document.getElementById('shop-sell').classList.add('active');
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≥–ª–æ–±–∞–ª—å–Ω–æ
window.updateShopDisplay = updateShopDisplay;